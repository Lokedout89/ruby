name: Compilations

on: [push, pull_request]

# Github actions does not support YAML anchors.  This creative use of
# environment variables (plus the "echo $GITHUB_ENV" hack) is to reroute that
# restriction.
env:
  default_cc: clang-14
  append_cc: ''
  crosshost: ''

  # -O1 is faster than -O3 in our tests... Majority of time are consumed trying
  # to optimize binaries.  Also Github Actions run on relatively modern CPUs
  # compared to, say, GCC 4 or Clang 3.  We don't specify `-march=native`
  # because compilers tend not understand what the CPU is.
  optflags: '-O1'

  # -g0 disables backtraces when SEGV.  Do not set that.
  debugflags: '-ggdb3'

  default_configure: >-
    --enable-debug-env
    --disable-install-doc
    --with-ext=-test-/cxxanyargs,+
  append_configure: >-
    --without-valgrind
    --without-jemalloc
    --without-gmp

  UPDATE_UNICODE: >-
    UNICODE_FILES=.
    UNICODE_PROPERTY_FILES=.
    UNICODE_AUXILIARY_FILES=.
    UNICODE_EMOJI_FILES=.
  CONFIGURE_TTY: never
  GITPULLOPTIONS: --no-tags origin ${{github.ref}}
  RUBY_DEBUG: ci rgengc
  RUBY_TESTOPTS: >-
    -q
    --color=always
    --tty=no

jobs:
  compile:
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { key: default_cc, name: gcc-11,    value: gcc-11,    container: gcc-11 }
          - { key: default_cc, name: 'gcc-11 -O2 -flto=auto -ffat-lto-objects', value: 'gcc-11 -O2 -flto=auto -ffat-lto-objects' ,container: gcc-11 }
          - { key: default_cc, name: clang-14,  value: clang-14,  container: clang-14 }
          - { key: default_cc, name: 'clang-14 -O2 -flto=auto', value: 'clang-14 -O2 -flto=auto', container: clang-14 }
    name: ${{ matrix.entry.name }}
    runs-on: ubuntu-latest
    container: ghcr.io/ruby/ruby-ci-image:${{ matrix.entry.container || 'clang-14' }}
    steps:
      - run: mkdir build
        working-directory:
      - name: setenv
        run: |
          echo "${{ matrix.entry.key }}=${{ matrix.entry.value }}" >> $GITHUB_ENV
          echo "make=make -j$((1 + $(nproc --all)))" >> $GITHUB_ENV
      - uses: actions/checkout@v2
        with:
          path: src
      - run: ./autogen.sh
        working-directory: src
      - name: Run configure
        run: |
          if [ -n "${crosshost}" ]; then
            ../src/configure -C \
              ${default_configure} \
              ${append_configure} \
              --host="${crosshost}"
          else
            ../src/configure -C \
              ${default_configure} \
              ${append_configure} \
              --with-gcc="${default_cc} ${append_cc}"
          fi
      - run: $make extract-extlibs
      - run: $make incs
      - run: $make
      - run: $make leaked-globals
      - run: $make test
      - run: $make install
      - run: /usr/local/bin/gem install --no-doc timezone tzinfo
      - run: $make test-tool
      - run: $make test-all TESTS='-- ruby -ext-'
      - run: $make test-spec

      - uses: k0kubun/action-slack@v2.0.0
        with:
          payload: |
            {
              "ci": "GitHub Actions",
              "env": "${{ github.workflow }} / ${{ matrix.entry.name }}",
              "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "commit": "${{ github.sha }}",
              "branch": "${{ github.ref }}".split('/').reverse()[0]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SIMPLER_ALERTS_URL }} # ruby-lang slack: ruby/simpler-alerts-bot
        if: ${{ failure() && github.event_name == 'push' }}

defaults:
  run:
    working-directory: build
